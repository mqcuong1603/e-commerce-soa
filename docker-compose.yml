services:
  # Frontend service
  client:
    build:
      context: .
      dockerfile: docker/Dockerfile.client
    container_name: ecommerce-client
    restart: always
    ports:
      - "${CLIENT_PORT:-8080}:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL} # API URL for the frontend
      - REACT_APP_SOCKET_URL=${REACT_APP_SOCKET_URL} # Socket URL for the frontend
      # Environment variables for development hot reloading
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_PORT=0
    volumes:
      - ./client:/app # Mount the client directory for hot reloading
      - /app/node_modules # Don't override node_modules
    command: npm start # Run the dev server
    depends_on:
      - server
    networks:
      - app-network

  # Backend service
  server:
    build:
      context: .
      dockerfile: docker/Dockerfile.server
    container_name: ecommerce-server
    restart: always
    environment:
      - NODE_ENV=development
      - PORT=${PORT:-3000}
      - MONGO_USER=${MONGO_USER:-admin}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-password}
      - MONGO_DB=${MONGO_DB:-ecommerce}
      - MONGO_HOST=${MONGO_HOST:-mongo}
      - MONGODB_URI=${MONGODB_URI:-mongodb://admin:password@mongo:27017/ecommerce?authSource=admin}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key}
      - CLIENT_URL=${CLIENT_URL:-http://localhost:8080}
      - SEED_DATABASE=${SEED_DATABASE:-true}
    ports:
      - "${SERVER_PORT:-3000}:3000"
      - "9229:9229" # For Node.js debugging
    volumes:
      - ./server:/app # Mount the server directory for hot reloading
      - /app/node_modules # Don't override node_modules
    # Correctly reference app.js without duplication
    command: nodemon --inspect=0.0.0.0:9229 app.js
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - app-network

  # MongoDB service
  mongo:
    image: mongo:latest
    container_name: ecommerce-mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=${MONGO_DB:-ecommerce}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "-u",
          "${MONGO_USER:-admin}",
          "-p",
          "${MONGO_PASSWORD:-password}",
          "--eval",
          "db.adminCommand('ping')",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

# Define networks
networks:
  app-network:
    driver: bridge

# Define volumes
volumes:
  mongo-data:
    driver: local
