services:
  # Frontend service
  client:
    build:
      context: .
      dockerfile: docker/Dockerfile.client
    container_name: ecommerce-client
    restart: always
    ports:
      - "${CLIENT_PORT:-8080}:80"
    environment:
      - REACT_APP_API_URL=http://server:3000/api
      - REACT_APP_SOCKET_URL=http://server:3000
    depends_on:
      - server
    networks:
      - app-network

  # Backend service
  server:
    build:
      context: .
      dockerfile: docker/Dockerfile.server
    container_name: ecommerce-server
    restart: always
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DB=${MONGO_DB}
      - MONGO_HOST=${MONGO_HOST}
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FACEBOOK_APP_ID=${FACEBOOK_APP_ID}
      - FACEBOOK_APP_SECRET=${FACEBOOK_APP_SECRET}
      - CLIENT_URL=${CLIENT_URL}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_SECURE=${EMAIL_SECURE}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - SEED_DATABASE=${SEED_DATABASE}
      - REACT_APP_SOCKET_URL=${REACT_APP_SOCKET_URL}
    ports:
      - "${SERVER_PORT:-3000}:3000"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - app-network

  # MongoDB service
  mongo:
    image: mongo:latest
    container_name: ecommerce-mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "-u",
          "${MONGO_USER}",
          "-p",
          "${MONGO_PASSWORD}",
          "--eval",
          "db.adminCommand('ping')",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

# Define networks
networks:
  app-network:
    driver: bridge

# Define volumes
volumes:
  mongo-data:
    driver: local
