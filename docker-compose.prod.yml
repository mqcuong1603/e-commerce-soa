services:
  nginx:
    build:
      context: .
      dockerfile: docker/Dockerfile.client
    container_name: ecommerce-nginx-prod
    restart: always
    ports:
      - "80:80"
    depends_on:
      - server
    networks:
      - app-network

  # Backend server
  server:
    build:
      context: .
      dockerfile: docker/Dockerfile.server
    container_name: ecommerce-server-prod
    restart: always
    env_file:
      - ./.env
    environment:
      - NODE_ENV=production
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - app-network

  # MongoDB service
  mongo:
    image: mongo:latest
    container_name: ecommerce-mongo-prod
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=ecommerce
    ports:
      - "27018:27017"
    volumes:
      - mongo-prod-data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  app-network:
    driver: bridge

volumes:
  mongo-prod-data:
    driver: local
